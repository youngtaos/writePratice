什么是协商缓存（304）？   
原理：当客户端向服务端发送请求的时候，服务端会校验是否有对应的一个标识，这个标识可以标志缓存资源是否过期；
     没有这个标识的话，说明资源是第一次请求，服务端会把相应标识发给客户端；
     客户端下一次去请求这个资源的时候，会携带这个标识去服务端，服务端会对这个标识进行对比；
          如果对比结果是资源没有更新的话，说明缓存被命中，服务端会相应304；
          反之则返回200，将最新的资源返给客户端，进行数据更新

两种标识方式（Last-Modifed + If-Modified-Since  和    Etag + If-None-Match）：

Last-Modifed + If-Modified-Since： 客户端向服务端请求数据时候，服务端会发送 Last-Modifed 给客户端（一个GMT时间）；
                                                                   客户端在下一次请求这个资源的时候，请求头里面加  If-Modified-Since （这个值的值为上次的Last-Modifed ）给服务端；
                                                                   服务端会将客户端发送的 If-Modified-Since 和当前的 Last-Modifed 进行对比；
                                                                   如果对比结果是资源没有更新的话，说明缓存被命中，服务端会相应304；
                                                                   反之则返回200，将最新的资源返给客户端，进行数据更新


 Etag + If-None-Match：                        客户端向服务端请求数据时候，服务端会发送 Etag 给客户端（一个唯一标识符）；
                                                                   客户端在下一次请求这个资源的时候，请求头里面加  If-None-Match （值是Etag的值）给服务端；
                                                                   服务端会将客户端发送的  If-None-Match  和当前的  Etag 进行对比；
                                                                   如果对比结果是资源没有更新的话，说明缓存被命中，服务端会相应304；
                                                                   反之则返回200，将最新的资源返给客户端，进行数据更新


 